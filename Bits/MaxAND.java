package ImportantQ.Bits;
// Given an array arr[] of N positive elements. The task is to find the Maximum AND Value generated by any
// pair of the element from the array.
public class MaxAND {
    // It returns number of elements in array which match with given Pattern
    // Utility function to check number of elements
    // having set msb as of pattern
    // O(n * log(m)) where m is the maximum element from the array and n is the size of the array.
    static int checkBit(int pattern, int[] arr, int n){
        int count = 0;
        for(int i = 0; i < n; i++){
            if((pattern & arr[i]) == pattern)
                count++;
        }
        return count;
    }

    static int maxAndPair(int[] arr, int n){
        int ans = 0, count = 0;

        for(int bit = 31; bit >= 0; bit--){
            // it counts number of elements which have 1 at position 'bit' or not.
            count = checkBit(ans | 1 << bit, arr, n);
            // find the count of element having set  msb at 'bit' position

            if(count >= 2){ // if count >= 2, then set that bit at 'bit' position
                ans = ans | (1<<bit);
            }
        }
        return ans;
    }

    public static void main(String[] args) {
        // A naive approach is to iterate for all the pairs using two for loops and check for the maximum '&' value of any pair.

        int[] arr = {4, 8, 12, 16};
        System.out.println(maxAndPair(arr, 4));

    }
}
